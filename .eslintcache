[{"D:\\dev\\cab2021_typescript\\src\\index.tsx":"1","D:\\dev\\cab2021_typescript\\src\\reportWebVitals.ts":"2","D:\\dev\\cab2021_typescript\\src\\store\\reducers.ts":"3","D:\\dev\\cab2021_typescript\\src\\components\\App\\App.tsx":"4","D:\\dev\\cab2021_typescript\\src\\store\\state.ts":"5","D:\\dev\\cab2021_typescript\\src\\components\\LoginPage\\index.tsx":"6","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\index.tsx":"7","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\NavBar.tsx":"8","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminAddTask.tsx":"9","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminResults.tsx":"10","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminStatistics.tsx":"11","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserTasks\\UserTasks.tsx":"12","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserResults\\UserResults.tsx":"13","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserTasks\\UserTasksTable.tsx":"14","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserResults\\UserResultsTab.tsx":"15"},{"size":744,"mtime":1612984829955,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1612455439691,"results":"18","hashOfConfig":"17"},{"size":854,"mtime":1612891225325,"results":"19","hashOfConfig":"17"},{"size":717,"mtime":1612891225108,"results":"20","hashOfConfig":"17"},{"size":217,"mtime":1612891225369,"results":"21","hashOfConfig":"17"},{"size":2403,"mtime":1612891225109,"results":"22","hashOfConfig":"17"},{"size":1594,"mtime":1612896827873,"results":"23","hashOfConfig":"17"},{"size":3040,"mtime":1612891573668,"results":"24","hashOfConfig":"17"},{"size":183,"mtime":1612891225125,"results":"25","hashOfConfig":"17"},{"size":182,"mtime":1612891225134,"results":"26","hashOfConfig":"17"},{"size":189,"mtime":1612891225147,"results":"27","hashOfConfig":"17"},{"size":233,"mtime":1612897062656,"results":"28","hashOfConfig":"17"},{"size":477,"mtime":1612979073804,"results":"29","hashOfConfig":"17"},{"size":2413,"mtime":1612897018780,"results":"30","hashOfConfig":"17"},{"size":3128,"mtime":1612979073814,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10kw6a3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"D:\\dev\\cab2021_typescript\\src\\index.tsx",[],["68","69"],"D:\\dev\\cab2021_typescript\\src\\reportWebVitals.ts",[],"D:\\dev\\cab2021_typescript\\src\\store\\reducers.ts",[],"D:\\dev\\cab2021_typescript\\src\\components\\App\\App.tsx",["70"],"import React, { useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux';\r\nimport { LoginPage } from '../LoginPage';\r\nimport { MainPage } from '../MainPage';\r\nimport './App.css';\r\n\r\nexport const App: React.FC = () => {\r\n  const curPage: string = useSelector( (state:IRootState) => state.curPage)\r\n\r\n  const [ curShowPage, changeCurShowPage ] = useState(<LoginPage />);\r\n\r\n  useEffect( ()=>{\r\n    switch ( curPage ) {\r\n      case \"LoginPage\" : changeCurShowPage(<LoginPage />); break;\r\n      case \"MainPage\"  : changeCurShowPage(<MainPage />); break;\r\n      default :  changeCurShowPage(<LoginPage />);\r\n    }\r\n  }, [curPage])\r\n\r\n  return (\r\n    <>     \r\n     {curShowPage}     \r\n    </>\r\n  )\r\n}","D:\\dev\\cab2021_typescript\\src\\store\\state.ts",[],"D:\\dev\\cab2021_typescript\\src\\components\\LoginPage\\index.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\index.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\NavBar.tsx",["71"],"import { AppBar, Button, MenuItem, Toolbar } from '@material-ui/core';\r\nimport React, { Dispatch, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const NavBar:React.FC = () => {\r\n    const curStateUserData = useSelector((state:IRootState) => state.curUser);\r\n    const [curUserData, setCurUserData] = useState<IUserData>({\r\n        UserId : -1,\r\n        UserFIO : \"\"\r\n    });\r\n    \r\n    const [ curNavMenu, setCurNavMenu ] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n       setCurUserData(curStateUserData);     \r\n    },[curStateUserData]);\r\n\r\n    const dispatch:Dispatch<any> = useDispatch();\r\n    const NavMenuClickHanlder = ( link:string ) => {\r\n        dispatch({\r\n            type: \"ShowSubPage\",\r\n            newSubPage: link\r\n        })\r\n   };\r\n   const NavMenuExitHandler = () => {\r\n       dispatch({\r\n           type : \"LogOut\"\r\n       })\r\n   };\r\n    useEffect (() => {\r\n       \r\n        let menu:any;\r\n        if (curUserData.UserFIO === \"Admin\" ) {\r\n            menu = (\r\n                <>                \r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuClickHanlder(\"AdminAddTask\")\r\n                        }}>Add task</MenuItem>\r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuClickHanlder(\"AdminResults\")\r\n                        }}>Show result</MenuItem>\r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuClickHanlder(\"AdminStatistics\")\r\n                        }}>Statistic</MenuItem>\r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuExitHandler();\r\n                        }}>Exit</MenuItem>\r\n                    </>\r\n            );\r\n        }        \r\n        else {\r\n            menu = (\r\n                <>                \r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuClickHanlder(\"UserTasks\")\r\n                        }}>My tasks</MenuItem>\r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuClickHanlder(\"UserResults\")\r\n                        }}>My results</MenuItem>                \r\n                    <MenuItem\r\n                        onClick = { () => {\r\n                            NavMenuExitHandler();\r\n                        }}>Exit</MenuItem>\r\n                    </>\r\n            );\r\n        }\r\n        setCurNavMenu(menu);                \r\n    }, [curUserData]);\r\n   \r\n   return (\r\n        <div className = \"NavBar\">\r\n            <AppBar position=\"static\" className=\"NavBar\">\r\n                <Toolbar className=\"NavBar_1\">\r\n                    <Button color=\"inherit\"> {`Welcome, ${curUserData.UserFIO}`}</Button>       \r\n                    <div className=\"NavBar_Nav\">{curNavMenu}</div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminAddTask.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminResults.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\AdminPages\\AdminStatistics.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserTasks\\UserTasks.tsx",[],"D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserResults\\UserResults.tsx",["72","73","74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { UserResultsTab } from \"./UserResultsTab\";\r\n\r\nexport const UserResults:React.FC = () => {\r\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\r\n    const [ curUsersResults, setCurUsersResults ] = useState<any[]>([]);\r\n\r\n    return (\r\n        <div className = \"UserResults\">            \r\n            <UserResultsTab />\r\n        </div>\r\n    )\r\n}","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserTasks\\UserTasksTable.tsx",["76"],"import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport const UserTasksTable:React.FC = () => {\r\n    return (\r\n        <div className =\"UserTasksTable\">\r\n            <Paper>\r\n                <TableContainer>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    key={\"01\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"250px\" }}\r\n                                >\r\n                                    TableName\r\n                                </TableCell>                                \r\n                                <TableCell\r\n                                    key={\"02\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"200px\" }}\r\n                                >\r\n                                    TabDate\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    key={\"03\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"100px\"}}\r\n                                >\r\n                                    AttempsCount\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody >\r\n                            <TableRow\r\n                                hover\r\n                                role=\"checkbox\"\r\n                                tabIndex={-1}\r\n                                key={\"11\"}>\r\n                                <TableCell key={\"011\"} align=\"center\">CT_2020_1</TableCell>\r\n                                <TableCell key={\"012\"} align=\"center\">2020-01-01 10:10:10</TableCell>\r\n                                <TableCell key={\"013\"} align=\"center\">3</TableCell>\r\n                            </TableRow>                                                                                  \r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>             \r\n            </Paper>\r\n        </div>\r\n    )\r\n}","D:\\dev\\cab2021_typescript\\src\\components\\MainPage\\UserPages\\UserResults\\UserResultsTab.tsx",["77","78"],"import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const UserResultsTab: React.FC = () => {\r\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\r\n    const [ curShowTasks, setCurShowTasks ] = useState<any[]>([]);\r\n    // ;\r\n    useEffect(()=>{\r\n        let arr:any[] = [];\r\n        fetch(`$sql = \"SELECT * FROM 'cab2021_tasks' WHERE USER_FIO LIKE '\".$_GET[\"request_user_fio\"].\"' \"`)\r\n        .then( (res)=>res.json())\r\n        .then (\r\n            (result) => {\r\n                result.tasks.map ( (el:any) => {\r\n                    arr.push(\r\n                        <TableRow\r\n                                hover\r\n                                role=\"checkbox\"\r\n                                tabIndex={-1}\r\n                                key={el.task_id}>\r\n                                <TableCell key={el.task_id+\"1\"} align=\"center\">{el.task_test_name}</TableCell>\r\n                                <TableCell key={el.task_id+\"3\"} align=\"center\">{el.task_end_time}</TableCell>\r\n                                <TableCell key={el.task_id+\"3\"} align=\"center\">{el.task_attempts_count}</TableCell>\r\n                            </TableRow>\r\n                    )\r\n                })                    \r\n            }\r\n        );\r\n        setCurShowTasks(arr);\r\n    },[curUserFIO]);\r\n    return (\r\n        <div className=\"UserResultsTab\">\r\n            asdsd\r\n            <Paper>\r\n                <TableContainer>\r\n                    <Table stickyHeader aria-label=\"sticky table\" className=\"UserResultsTab\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    key={\"01\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"250px\" }}\r\n                                >\r\n                                    TableName\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    key={\"02\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"200px\" }}\r\n                                >\r\n                                    TabDate\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    key={\"03\"}\r\n                                    align=\"center\"\r\n                                    style={{ minWidth: \"100px\" }}\r\n                                >\r\n                                    TestResult\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody >\r\n                            {curShowTasks}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":9,"nodeType":"85","messageId":"86","endLine":9,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":74,"column":8,"nodeType":"89","endLine":74,"endColumn":21,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"92","line":6,"column":11,"nodeType":"85","messageId":"86","endLine":6,"endColumn":21},{"ruleId":"83","severity":1,"message":"93","line":7,"column":13,"nodeType":"85","messageId":"86","endLine":7,"endColumn":28},{"ruleId":"83","severity":1,"message":"94","line":7,"column":30,"nodeType":"85","messageId":"86","endLine":7,"endColumn":48},{"ruleId":"83","severity":1,"message":"95","line":1,"column":73,"nodeType":"85","messageId":"86","endLine":1,"endColumn":88},{"ruleId":"83","severity":1,"message":"95","line":1,"column":73,"nodeType":"85","messageId":"86","endLine":1,"endColumn":88},{"ruleId":"96","severity":1,"message":"97","line":15,"column":45,"nodeType":"98","messageId":"99","endLine":15,"endColumn":47},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NavMenuClickHanlder' and 'NavMenuExitHandler'. Either include them or remove the dependency array.","ArrayExpression",["102"],"'useEffect' is defined but never used.","'curUserFIO' is assigned a value but never used.","'curUsersResults' is assigned a value but never used.","'setCurUsersResults' is assigned a value but never used.","'TablePagination' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [NavMenuClickHanlder, NavMenuExitHandler, curUserData]",{"range":"105","text":"106"},[2621,2634],"[NavMenuClickHanlder, NavMenuExitHandler, curUserData]"]