[{"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx":"1","/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts":"2","/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts":"3","/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx":"4","/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts":"5","/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx":"6","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx":"7","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx":"8","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx":"9","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx":"10","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx":"11","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx":"12","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx":"13","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminShowTestInfo.tsx":"14","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx":"15","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx":"16","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminShowTestInfoTest.tsx":"17","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx":"18","/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts":"19","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_0.tsx":"20","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_1.tsx":"21","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx":"22","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx":"23","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx":"24"},{"size":721,"mtime":1613306113245,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1613306113245,"results":"27","hashOfConfig":"26"},{"size":1412,"mtime":1613586112598,"results":"28","hashOfConfig":"26"},{"size":693,"mtime":1613306113241,"results":"29","hashOfConfig":"26"},{"size":299,"mtime":1613324478722,"results":"30","hashOfConfig":"26"},{"size":2331,"mtime":1613306113241,"results":"31","hashOfConfig":"26"},{"size":1850,"mtime":1613324374358,"results":"32","hashOfConfig":"26"},{"size":3046,"mtime":1613306113241,"results":"33","hashOfConfig":"26"},{"size":181,"mtime":1613306113241,"results":"34","hashOfConfig":"26"},{"size":225,"mtime":1613306113241,"results":"35","hashOfConfig":"26"},{"size":5700,"mtime":1613764268510,"results":"36","hashOfConfig":"26"},{"size":10044,"mtime":1613764268510,"results":"37","hashOfConfig":"26"},{"size":249,"mtime":1613764268510,"results":"38","hashOfConfig":"26"},{"size":8179,"mtime":1613586112570,"results":"39","hashOfConfig":"26"},{"size":7379,"mtime":1613768346743,"results":"40","hashOfConfig":"26"},{"size":4544,"mtime":1613764268510,"results":"41","hashOfConfig":"26"},{"size":1631,"mtime":1613586112570,"results":"42","hashOfConfig":"26"},{"size":4601,"mtime":1613764268510,"results":"43","hashOfConfig":"26"},{"size":135721,"mtime":1613764268514,"results":"44","hashOfConfig":"26"},{"size":1427,"mtime":1613586112570,"results":"45","hashOfConfig":"26"},{"size":2356,"mtime":1613586112570,"results":"46","hashOfConfig":"26"},{"size":3690,"mtime":1613415678496,"results":"47","hashOfConfig":"26"},{"size":3486,"mtime":1613415670108,"results":"48","hashOfConfig":"26"},{"size":3321,"mtime":1613306113241,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jvhxci",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"91"},"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx",["104"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx",["105"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminShowTestInfo.tsx",["126","127","128","129"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx",["130","131","132","133","134","135","136","137","138"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx",["139","140","141"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminShowTestInfoTest.tsx",["142","143"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx",["144"],"/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_0.tsx",["145"],"import {\n  makeStyles,\n  TextField,  \n} from \"@material-ui/core\";\nimport React, { Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\ninterface ITT_B_0_props {\n  quest: string;\n  questText: string;\n}\n\nconst useStyles = makeStyles({ \n  container :{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    height: \"500px\"\n  },\n  questText :{\n    fontSize: 30\n  },\n  quest: {\n    fontSize: 30\n  }\n});\n\nexport const TestTemplate_B_0 = ({quest, questText}:ITT_B_0_props) => {\n  const classes = useStyles();\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  \n  const [ curAnswer, setCurAnswer ] = useState(\"\");\n\n  useEffect(()=>{\n    if ( curUserAnswer === \"\") {\n      setCurAnswer(\"\")\n    }\n  },[curUserAnswer]);\n\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : curAnswer\n    });\n  },[curAnswer]);\n  \n  return (\n    <div className={classes.container}>\n      <p className = {classes.quest}>{quest}</p>\n      <p className = {classes.questText}>{questText}</p>\n      <TextField\n        id=\"outlined-basic\" \n        label=\"Адказ\" \n        variant=\"outlined\" \n        value={curAnswer}\n        onChange = { e => { setCurAnswer(e.currentTarget.value)}}/>\n    </div>\n  );\n};\n",["146","147"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_1.tsx",["148"],"import {\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport React, { Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\ninterface ITT_B_1_props {\n  quest: string;\n  questTextArr: string[];\n}\n\nconst useStyles = makeStyles({ \n  container :{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n  },\n  lil : {\n    fontSize: 30,\n    listStyleType: \"none\"\n  },\n  inner_container:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  quest: {\n    fontSize: 30,\n    textAlign: \"center\"\n  }\n});\n\nexport const TestTemplate_B_1 = ({quest, questTextArr}:ITT_B_1_props) => {\n  const classes = useStyles();\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  \n  const [ curAnswer, setCurAnswer ] = useState(\"\");\n\n  useEffect(()=>{\n    if ( curUserAnswer === \"\") {\n      setCurAnswer(\"\")\n    }\n  },[curUserAnswer]);\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : curAnswer\n    });\n  },[curAnswer]);\n  \n  return (\n    <div className={classes.container}>\n      <p className = {classes.quest}>{quest}</p>\n      <div className={classes.inner_container}>\n        <div>\n          <ul style={{}}>   \n            <li className = {classes.lil}>{questTextArr[0]}</li>\n            <li className = {classes.lil}>{questTextArr[1]}</li>\n            <li className = {classes.lil}>{questTextArr[2]}</li>\n            <li className = {classes.lil}>{questTextArr[3]}</li>\n            <li className = {classes.lil}>{questTextArr[4]}</li>\n          </ul>\n        </div>\n        <div>\n          <ul>\n            <li className = {classes.lil}>{questTextArr[5]}</li>\n            <li className = {classes.lil}>{questTextArr[6]}</li>\n            <li className = {classes.lil}>{questTextArr[7]}</li>\n            <li className = {classes.lil}>{questTextArr[8]}</li>\n            <li className = {classes.lil}>{questTextArr[9]}</li>\n          </ul>\n        </div>\n      </div>\n      <TextField \n        id=\"outlined-basic\" \n        label=\"Адказ\" \n        variant=\"outlined\"\n        value={curAnswer}\n        onChange = { e => { setCurAnswer(e.currentTarget.value)}} />\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx",["149"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\ninterface ITT_A_2_props {\n  quest: string;\n  questText: string;\n  answers: string[];\n}\n\nconst useStyles = makeStyles({\n  group: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    height: \"250px\"\n  },\n  quest : {\n      fontSize: 35,\n      width: \"100%\",    \n      textAlign: \"center\"  \n  },\n  questText : {\n    fontSize: 20,\n    width: \"100%\",    \n    textAlign: \"center\"  \n  },\n  lab: {\n    fontSize: 15,\n    marginLeft: 30,\n  },\n  checkbox: {\n    paddingTop: 10,  \n    transform: \"scale(2)\",\n  },\n});\n\nexport const TestTemplate_A_2 = ({quest, questText, answers}:ITT_A_2_props) => {\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  \n  const classes = useStyles();\n  const [ ch0, setCh0 ] = useState(false);\n  const [ ch1, setCh1 ] = useState(false);\n  const [ ch2, setCh2 ] = useState(false);\n  const [ ch3, setCh3 ] = useState(false);\n  const [ ch4, setCh4 ] = useState(false);\n\n  useEffect (() => {\n    if (curUserAnswer === \"\") {\n      setCh0(false);\n      setCh1(false);\n      setCh2(false);\n      setCh3(false);\n      setCh4(false);\n    }    \n  },[ curUserAnswer]);\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : `${ch0?\"1\":\"\"}${ch1?\"2\":\"\"}${ch2?\"3\":\"\"}${ch3?\"4\":\"\"}${ch4?\"5\":\"\"}`\n    });\n  },[ch0, ch1, ch2, ch3, ch4]);\n  \n  return (\n    <div className=\"TT_A_2\">\n      <p className = {classes.quest}>{quest}</p>\n      <p className = {classes.questText}>{questText}</p>\n      <div className = \"TT_A_2_container\">\n      <FormGroup className={classes.group}>\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox\n              checked={ch0}\n              className={classes.checkbox}\n              onChange={ () => setCh0(!ch0) }\n              name=\"gilad\"\n            />\n          }\n          label={<Typography className={classes.lab}>{answers[0]}</Typography>}\n        />        \n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch1} \n                className={classes.checkbox}\n                onChange={ () => setCh1(!ch1) }\n                name=\"jason\" />}\n          label={<Typography className={classes.lab}>{answers[1]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch2} \n                className={classes.checkbox}\n                onChange={ () => setCh2(!ch2) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[2]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch3} \n                className={classes.checkbox}\n                onChange={ () => setCh3(!ch3) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[3]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch4} \n                className={classes.checkbox}\n                onChange={ () => setCh4(!ch4) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[4]}</Typography>}\n        />\n      </FormGroup>\n      </div>\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx",["150"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\ninterface ITT_A_1_props {\n  quest: string;\n  answers: string[];\n}\n\nconst useStyles = makeStyles({\n  group: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    height: \"500px\",\n  },\n  quest : {\n      fontSize: 50,\n      width: \"100%\",    \n      textAlign: \"center\"  \n  },\n  lab: {\n    fontSize: 25,\n    marginLeft: 30,\n  },\n  checkbox: {\n    paddingTop: 10,  \n    transform: \"scale(2)\",\n  },\n});\n\nexport const TestTemplate_A_1 = ({quest, answers}:ITT_A_1_props) => {\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  \n  const classes = useStyles();\n  const [ ch0, setCh0 ] = useState(false);\n  const [ ch1, setCh1 ] = useState(false);\n  const [ ch2, setCh2 ] = useState(false);\n  const [ ch3, setCh3 ] = useState(false);\n  const [ ch4, setCh4 ] = useState(false);\n  \n  useEffect (() => {\n    if (curUserAnswer === \"\") {\n      setCh0(false);\n      setCh1(false);\n      setCh2(false);\n      setCh3(false);\n      setCh4(false);\n    }    \n  },[ curUserAnswer])\n\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : `${ch0?\"1\":\"\"}${ch1?\"2\":\"\"}${ch2?\"3\":\"\"}${ch3?\"4\":\"\"}${ch4?\"5\":\"\"}`\n    });\n  },[ch0, ch1, ch2, ch3, ch4])\n  \n  return (\n    <div className=\"TT_A_1\">\n      <p className = {classes.quest}>{quest}</p>\n      <div className = \"TT_A_1_container\">\n      <FormGroup className={classes.group}>\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox\n              checked={ch0}\n              className={classes.checkbox}\n              onChange={ () => setCh0(!ch0) }\n              name=\"gilad\"\n            />\n          }\n          label={<Typography className={classes.lab}>{answers[0]}</Typography>}\n        />        \n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch1} \n                className={classes.checkbox}\n                onChange={ () => setCh1(!ch1) }\n                name=\"jason\" />}\n          label={<Typography className={classes.lab}>{answers[1]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch2} \n                className={classes.checkbox}\n                onChange={ () => setCh2(!ch2) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[2]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch3} \n                className={classes.checkbox}\n                onChange={ () => setCh3(!ch3) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[3]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch4} \n                className={classes.checkbox}\n                onChange={ () => setCh4(!ch4) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[4]}</Typography>}\n        />\n      </FormGroup>\n      </div>\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx",["151"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\ninterface ITT_A_0_props {\n  quest: string;\n  answers: string[];\n}\n\nconst useStyles = makeStyles({\n  quest : {\n      fontSize: 60,\n      width: \"100%\",    \n      textAlign: \"center\"  \n  },\n  lab: {\n    fontSize: 40,\n    marginLeft: 30,\n  },\n  checkbox: {\n    paddingTop: 10,  \n    transform: \"scale(2)\",\n  },\n});\n\nexport const TestTemplate_A_0 = ({quest, answers}:ITT_A_0_props) => {\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  const classes = useStyles();\n  const [ ch0, setCh0 ] = useState(false);\n  const [ ch1, setCh1 ] = useState(false);\n  const [ ch2, setCh2 ] = useState(false);\n  const [ ch3, setCh3 ] = useState(false);\n  const [ ch4, setCh4 ] = useState(false);\n\n  useEffect (() => {\n    if (curUserAnswer === \"\") {\n      setCh0(false);\n      setCh1(false);\n      setCh2(false);\n      setCh3(false);\n      setCh4(false);\n    }    \n  },[ curUserAnswer])\n\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : `${ch0?\"1\":\"\"}${ch1?\"2\":\"\"}${ch2?\"3\":\"\"}${ch3?\"4\":\"\"}${ch4?\"5\":\"\"}`\n    });\n  },[ch0, ch1, ch2, ch3, ch4])\n  \n  return (\n    <div className=\"TT_A_0\">\n      <p className = {classes.quest}>{quest}</p>\n      <FormGroup>\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox\n              checked={ch0}\n              className={classes.checkbox}\n              onChange={ () => setCh0(!ch0) }\n              name=\"gilad\"\n            />\n          }\n          label={<Typography className={classes.lab}>{answers[0]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch1} \n                className={classes.checkbox}\n                onChange={ () => setCh1(!ch1) }\n                name=\"jason\" />}\n          label={<Typography className={classes.lab}>{answers[1]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch2} \n                className={classes.checkbox}\n                onChange={ () => setCh2(!ch2) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[2]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch3} \n                className={classes.checkbox}\n                onChange={ () => setCh3(!ch3) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[3]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch4} \n                className={classes.checkbox}\n                onChange={ () => setCh4(!ch4) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[4]}</Typography>}\n        />\n      </FormGroup>\n    </div>\n  );\n};\n",{"ruleId":"152","severity":1,"message":"153","line":74,"column":8,"nodeType":"154","endLine":74,"endColumn":21,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":57,"column":23,"nodeType":"158","messageId":"159","endLine":57,"endColumn":36},{"ruleId":"156","severity":1,"message":"160","line":9,"column":3,"nodeType":"158","messageId":"159","endLine":9,"endColumn":8},{"ruleId":"156","severity":1,"message":"161","line":11,"column":3,"nodeType":"158","messageId":"159","endLine":11,"endColumn":8},{"ruleId":"156","severity":1,"message":"162","line":12,"column":3,"nodeType":"158","messageId":"159","endLine":12,"endColumn":12},{"ruleId":"156","severity":1,"message":"163","line":13,"column":3,"nodeType":"158","messageId":"159","endLine":13,"endColumn":12},{"ruleId":"156","severity":1,"message":"164","line":14,"column":3,"nodeType":"158","messageId":"159","endLine":14,"endColumn":17},{"ruleId":"156","severity":1,"message":"165","line":15,"column":3,"nodeType":"158","messageId":"159","endLine":15,"endColumn":12},{"ruleId":"156","severity":1,"message":"166","line":16,"column":3,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},{"ruleId":"156","severity":1,"message":"167","line":17,"column":3,"nodeType":"158","messageId":"159","endLine":17,"endColumn":11},{"ruleId":"156","severity":1,"message":"168","line":20,"column":23,"nodeType":"158","messageId":"159","endLine":20,"endColumn":34},{"ruleId":"156","severity":1,"message":"169","line":68,"column":10,"nodeType":"158","messageId":"159","endLine":68,"endColumn":25},{"ruleId":"156","severity":1,"message":"170","line":69,"column":10,"nodeType":"158","messageId":"159","endLine":69,"endColumn":22},{"ruleId":"156","severity":1,"message":"171","line":76,"column":10,"nodeType":"158","messageId":"159","endLine":76,"endColumn":22},{"ruleId":"172","severity":1,"message":"173","line":86,"column":38,"nodeType":"174","messageId":"175","endLine":86,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":103,"column":35,"nodeType":"174","messageId":"175","endLine":103,"endColumn":37},{"ruleId":"172","severity":1,"message":"173","line":114,"column":39,"nodeType":"174","messageId":"175","endLine":114,"endColumn":41},{"ruleId":"172","severity":1,"message":"173","line":115,"column":41,"nodeType":"174","messageId":"175","endLine":115,"endColumn":43},{"ruleId":"172","severity":1,"message":"173","line":163,"column":42,"nodeType":"174","messageId":"175","endLine":163,"endColumn":44},{"ruleId":"172","severity":1,"message":"173","line":189,"column":42,"nodeType":"174","messageId":"175","endLine":189,"endColumn":44},{"ruleId":"172","severity":1,"message":"173","line":215,"column":62,"nodeType":"174","messageId":"175","endLine":215,"endColumn":64},{"ruleId":"176","severity":1,"message":"177","line":245,"column":1,"nodeType":"178","messageId":"179","endLine":280,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":83,"column":41,"nodeType":"174","messageId":"175","endLine":83,"endColumn":43},{"ruleId":"172","severity":1,"message":"173","line":90,"column":72,"nodeType":"174","messageId":"175","endLine":90,"endColumn":74},{"ruleId":"172","severity":1,"message":"173","line":93,"column":47,"nodeType":"174","messageId":"175","endLine":93,"endColumn":49},{"ruleId":"172","severity":1,"message":"173","line":107,"column":47,"nodeType":"174","messageId":"175","endLine":107,"endColumn":49},{"ruleId":"156","severity":1,"message":"180","line":72,"column":13,"nodeType":"158","messageId":"159","endLine":72,"endColumn":19},{"ruleId":"172","severity":1,"message":"173","line":84,"column":33,"nodeType":"174","messageId":"175","endLine":84,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":88,"column":38,"nodeType":"174","messageId":"175","endLine":88,"endColumn":40},{"ruleId":"181","severity":1,"message":"182","line":91,"column":50,"nodeType":"183","endLine":91,"endColumn":108},{"ruleId":"181","severity":1,"message":"184","line":93,"column":50,"nodeType":"183","endLine":93,"endColumn":108},{"ruleId":"181","severity":1,"message":"185","line":95,"column":50,"nodeType":"183","endLine":95,"endColumn":135},{"ruleId":"181","severity":1,"message":"186","line":97,"column":50,"nodeType":"183","endLine":97,"endColumn":114},{"ruleId":"181","severity":1,"message":"187","line":99,"column":50,"nodeType":"183","endLine":99,"endColumn":125},{"ruleId":"152","severity":1,"message":"188","line":113,"column":7,"nodeType":"154","endLine":113,"endColumn":21,"suggestions":"189"},{"ruleId":"172","severity":1,"message":"173","line":24,"column":45,"nodeType":"174","messageId":"175","endLine":24,"endColumn":47},{"ruleId":"152","severity":1,"message":"190","line":41,"column":7,"nodeType":"154","endLine":41,"endColumn":9,"suggestions":"191"},{"ruleId":"152","severity":1,"message":"190","line":44,"column":7,"nodeType":"154","endLine":44,"endColumn":19,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"173","line":32,"column":34,"nodeType":"174","messageId":"175","endLine":32,"endColumn":36},{"ruleId":"152","severity":1,"message":"193","line":48,"column":7,"nodeType":"154","endLine":48,"endColumn":12,"suggestions":"194"},{"ruleId":"172","severity":1,"message":"173","line":23,"column":47,"nodeType":"174","messageId":"175","endLine":23,"endColumn":49},{"ruleId":"152","severity":1,"message":"195","line":48,"column":5,"nodeType":"154","endLine":48,"endColumn":16,"suggestions":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"152","severity":1,"message":"195","line":53,"column":5,"nodeType":"154","endLine":53,"endColumn":16,"suggestions":"201"},{"ruleId":"152","severity":1,"message":"195","line":69,"column":5,"nodeType":"154","endLine":69,"endColumn":30,"suggestions":"202"},{"ruleId":"152","severity":1,"message":"195","line":63,"column":5,"nodeType":"154","endLine":63,"endColumn":30,"suggestions":"203"},{"ruleId":"152","severity":1,"message":"195","line":58,"column":5,"nodeType":"154","endLine":58,"endColumn":30,"suggestions":"204"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NavMenuClickHanlder' and 'NavMenuExitHandler'. Either include them or remove the dependency array.","ArrayExpression",["205"],"@typescript-eslint/no-unused-vars","'setQuestCount' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'useSelector' is defined but never used.","'curFullTestList' is assigned a value but never used.","'curShowTasks' is assigned a value but never used.","'selectedTest' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'rQuest' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component TestTemplate_A_0 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component TestTemplate_A_1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_A_2 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_B_0 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_B_1 must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'rThemes'. Either include it or remove the dependency array. You can also do a functional update 'setRThemes(r => ...)' if you only need 'rThemes' in the 'setRThemes' call.",["206"],"React Hook useEffect has a missing dependency: 'getTabData'. Either include it or remove the dependency array.",["207"],["208"],"React Hook useEffect has missing dependencies: 'classes.Accord' and 'classes.head'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["210"],"no-native-reassign",["211"],"no-negated-in-lhs",["212"],["213"],["214"],["215"],["216"],{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"229"},{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"230","fix":"233"},"Update the dependencies array to be: [NavMenuClickHanlder, NavMenuExitHandler, curUserData]",{"range":"234","text":"235"},"Update the dependencies array to be: [curTestName, rThemes]",{"range":"236","text":"237"},"Update the dependencies array to be: [getTabData]",{"range":"238","text":"239"},"Update the dependencies array to be: [curUserFIO, getTabData]",{"range":"240","text":"241"},"Update the dependencies array to be: [arr, classes.Accord, classes.head]",{"range":"242","text":"243"},"Update the dependencies array to be: [curAnswer, dispatch]",{"range":"244","text":"245"},{"range":"246","text":"245"},"Update the dependencies array to be: [ch0, ch1, ch2, ch3, ch4, dispatch]",{"range":"247","text":"248"},{"range":"249","text":"248"},{"range":"250","text":"248"},[2561,2574],"[NavMenuClickHanlder, NavMenuExitHandler, curUserData]",[4166,4180],"[curTestName, rThemes]",[1535,1537],"[getTabData]",[1598,1610],"[curUserFIO, getTabData]",[1539,1544],"[arr, classes.Accord, classes.head]",[1038,1049],"[curAnswer, dispatch]",[1178,1189],[1591,1616],"[ch0, ch1, ch2, ch3, ch4, dispatch]",[1445,1470],[1370,1395]]