[{"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx":"1","/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts":"2","/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts":"3","/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx":"4","/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts":"5","/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx":"6","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx":"7","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx":"8","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx":"9","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx":"10","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx":"11","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx":"12","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx":"13","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx":"14","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx":"15","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx":"16","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx":"17","/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts":"18","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx":"19","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx":"20"},{"size":721,"mtime":1613060845409,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1613060845409,"results":"23","hashOfConfig":"22"},{"size":1005,"mtime":1613060845409,"results":"24","hashOfConfig":"22"},{"size":693,"mtime":1613060845409,"results":"25","hashOfConfig":"22"},{"size":229,"mtime":1613060845409,"results":"26","hashOfConfig":"22"},{"size":2331,"mtime":1613060845409,"results":"27","hashOfConfig":"22"},{"size":1676,"mtime":1613060845409,"results":"28","hashOfConfig":"22"},{"size":2955,"mtime":1613060845409,"results":"29","hashOfConfig":"22"},{"size":175,"mtime":1613060845409,"results":"30","hashOfConfig":"22"},{"size":174,"mtime":1613060845409,"results":"31","hashOfConfig":"22"},{"size":181,"mtime":1613060845409,"results":"32","hashOfConfig":"22"},{"size":225,"mtime":1613060845409,"results":"33","hashOfConfig":"22"},{"size":464,"mtime":1613060845409,"results":"34","hashOfConfig":"22"},{"size":1920,"mtime":1613064100770,"results":"35","hashOfConfig":"22"},{"size":4261,"mtime":1613060845409,"results":"36","hashOfConfig":"22"},{"size":3885,"mtime":1613060845409,"results":"37","hashOfConfig":"22"},{"size":2705,"mtime":1613061451333,"results":"38","hashOfConfig":"22"},{"size":135626,"mtime":1613060845413,"results":"39","hashOfConfig":"22"},{"size":2889,"mtime":1613063736030,"results":"40","hashOfConfig":"22"},{"size":3094,"mtime":1613064528578,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jvhxci",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx",[],["88","89"],"/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx",["90"],"import { AppBar, Button, MenuItem, Toolbar } from '@material-ui/core';\nimport React, { Dispatch, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const NavBar:React.FC = () => {\n    const curStateUserData = useSelector((state:IRootState) => state.curUser);\n    const [curUserData, setCurUserData] = useState<IUserData>({\n        UserId : -1,\n        UserFIO : \"\"\n    });\n    \n    const [ curNavMenu, setCurNavMenu ] = useState([]);\n    \n    useEffect(()=>{\n       setCurUserData(curStateUserData);     \n    },[curStateUserData]);\n\n    const dispatch:Dispatch<any> = useDispatch();\n    const NavMenuClickHanlder = ( link:string ) => {\n        dispatch({\n            type: \"ShowSubPage\",\n            newSubPage: link\n        })\n   };\n   const NavMenuExitHandler = () => {\n       dispatch({\n           type : \"LogOut\"\n       })\n   };\n    useEffect (() => {\n       \n        let menu:any;\n        if (curUserData.UserFIO === \"Admin\" ) {\n            menu = (\n                <>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminAddTask\")\n                        }}>Add task</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminResults\")\n                        }}>Show result</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminStatistics\")\n                        }}>Statistic</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuExitHandler();\n                        }}>Exit</MenuItem>\n                    </>\n            );\n        }        \n        else {\n            menu = (\n                <>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"UserTasks\")\n                        }}>My tasks</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"UserResults\")\n                        }}>My results</MenuItem>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuExitHandler();\n                        }}>Exit</MenuItem>\n                    </>\n            );\n        }\n        setCurNavMenu(menu);                \n    }, [curUserData]);\n   \n   return (\n        <div className = \"NavBar\">\n            <AppBar position=\"static\" className=\"NavBar\">\n                <Toolbar className=\"NavBar_1\">\n                    <Button color=\"inherit\"> {`Welcome, ${curUserData.UserFIO}`}</Button>       \n                    <div className=\"NavBar_Nav\">{curNavMenu}</div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx",["91","92","93","94"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { UserResultsTab } from \"./UserResultsTab\";\n\nexport const UserResults:React.FC = () => {\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curUsersResults, setCurUsersResults ] = useState<any[]>([]);\n\n    return (\n        <div className = \"UserResults\">            \n            <UserResultsTab />\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx",["95","96","97","98","99"],"import { Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TestBase } from '../../../store/Tests';\nimport { TestTemplate_A_0 } from './TestPageTemplates/TestPageTemplate_A_0';\nimport { TestTemplate_A_1 } from './TestPageTemplates/TestPageTemplate_A_1';\nimport { TestTemplate_A_2 } from './TestPageTemplates/TestPageTemplate_A_2';\n\ninterface IQuest {\n    quest: string,\n    type: string,\n    answers?: any,\n    questText?: any,\n}\n\nexport const TestPage:React.FC = () => {\n    const curTestName = useSelector((state:IRootState) => state.curTestName);    \n    const [ curTestsQuests, setCurTestsQuests ] = useState<any[]>([]);\n    const [ curQuestIndex, incrQuestIndex ] = useState(0);\n\n    useEffect (() => {\n        let curTestsSet:any[]= [];\n        TestBase.map ( (el:any) => {\n            if ( el.testSetName === curTestName ) {\n                el.questions.map ( (al:IQuest) => {\n                        switch (al.type) {\n                            case \"A_0\" :\n                                curTestsSet.push(<TestTemplate_A_0 quest={al.quest} answers={al.answers} />); break;\n                            case \"A_1\" :\n                                curTestsSet.push(<TestTemplate_A_1 quest={al.quest} answers={al.answers} />); break;\n                            case \"A_2\" :\n                                curTestsSet.push(<TestTemplate_A_2 quest={al.quest} questText = {al.questText} answers={al.answers} />); break;\n                        }\n                })\n            };\n        });        \n        setCurTestsQuests( curTestsSet );\n    },[ curTestName])\n\n    return (\n        <div className = \"TestPage\">                \n            { curTestsQuests[curQuestIndex]}\n            <Button\n                onClick = { ()=> { incrQuestIndex( curQuestIndex + 1) }}\n                >Answer</Button>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx",["100","101"],"import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nconst useStyles = makeStyles({\n    tablecell : {\n        fontSize: \"25px\",\n    },\n  });\n\nexport const UserResultsTab: React.FC = () => {\n    const classes = useStyles();\n    const dispatch:Dispatch<any> = useDispatch();\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curShowTasks, setCurShowTasks ] = useState<any[]>([]);\n\n    useEffect(()=>{        \n        fetch(`https://cab07.000webhostapp.com/new_refact/new_user_getTasks.php?request_user_fio=${curUserFIO}`)\n        .then( (res)=>res.json())\n        .then (\n            (result) => {           \n                let arr:any[] = [];     \n                result.tasks.map ( (el:any) => {\n                    arr.push(                     \n                        {\n                            test_id : el.task_id,\n                            test_name: el.task_test_name,\n                            dateTime: el.task_end_time,\n                            attepts_count: el.task_attempts_count\n                        }\n                    )\n                })  \n                setCurShowTasks(arr);                  \n            }\n        );               \n    },[curUserFIO]);\n    const userTaksTrClickHandler = (nam: string ) => {\n        dispatch ({\n            type : \"ShowTest\",\n            testName : nam\n        })\n    }\n    return (\n        <div className=\"UserTasksTab\">           \n            <Paper>\n                <TableContainer>\n                    <Table stickyHeader aria-label=\"sticky table\" className=\"UserTasksTab\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell\n                                    key={\"01\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"250px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Test name\n                                </TableCell>\n                                <TableCell\n                                    key={\"02\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"200px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Test Date\n                                </TableCell>\n                                <TableCell\n                                    key={\"03\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"100px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Attempts count\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>     \n                            { curShowTasks.map ( el => {\n                                return (\n                                    <TableRow \n                                        hover\n                                        key = {el.test_id} \n                                        onClick = { () => { userTaksTrClickHandler(el.test_name)}}>\n                                        <TableCell align=\"center\" key={el.test_id+\"01\"} className={classes.tablecell}>{el.test_name}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.dateTime}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.attepts_count}</TableCell>\n                                    </TableRow>  \n                                )\n                            } )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx",["102","103"],"import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    tablecell : {\n        fontSize: \"25px\",\n    },\n  });\n\nexport const UserResultsTab: React.FC = () => {\n    const classes = useStyles();\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curShowTasks, setCurShowTasks ] = useState<any[]>([]);\n\n    useEffect(()=>{        \n        fetch(`https://cab07.000webhostapp.com/new_refact/new_user_getTestsResults.php?request_user_fio=${curUserFIO}`)\n        .then( (res)=>res.json())\n        .then (\n            (result) => {           \n                let arr:any[] = [];     \n                result.results.map ( (el:any) => {\n                    arr.push(                     \n                        {\n                            test_id : el.test_id,\n                            test_name: el.test_name,\n                            dateTime: el.dateTime,\n                            result: el.result\n                        }\n                    )\n                })  \n                setCurShowTasks(arr);                  \n            }\n        );               \n    },[curUserFIO]);\n    return (\n        <div className=\"UserResultsTab\">           \n            <Paper>\n                <TableContainer>\n                    <Table stickyHeader aria-label=\"sticky table\" className=\"UserResultsTab\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell\n                                    key={\"01\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"250px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    TableName\n                                </TableCell>\n                                <TableCell\n                                    key={\"02\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"200px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    TabDate\n                                </TableCell>\n                                <TableCell\n                                    key={\"03\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"100px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    TestResult\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>     \n                            { curShowTasks.map ( el => {\n                                return (\n                                    <TableRow \n                                        hover\n                                        key = {el.test_id} >\n                                        <TableCell align=\"center\" key={el.test_id+\"01\"} className={classes.tablecell}>{el.test_name}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.dateTime}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.result}</TableCell>\n                                    </TableRow>  \n                                )\n                            } )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":74,"column":8,"nodeType":"110","endLine":74,"endColumn":21,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":6,"column":11,"nodeType":"114","messageId":"115","endLine":6,"endColumn":21},{"ruleId":"112","severity":1,"message":"117","line":7,"column":13,"nodeType":"114","messageId":"115","endLine":7,"endColumn":28},{"ruleId":"112","severity":1,"message":"118","line":7,"column":30,"nodeType":"114","messageId":"115","endLine":7,"endColumn":48},{"ruleId":"119","severity":1,"message":"120","line":23,"column":33,"nodeType":"121","messageId":"122","endLine":23,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":25,"column":48,"nodeType":"121","messageId":"122","endLine":25,"endColumn":50},{"ruleId":"123","severity":1,"message":"124","line":28,"column":50,"nodeType":"125","endLine":28,"endColumn":108},{"ruleId":"123","severity":1,"message":"126","line":30,"column":50,"nodeType":"125","endLine":30,"endColumn":108},{"ruleId":"123","severity":1,"message":"127","line":32,"column":50,"nodeType":"125","endLine":32,"endColumn":135},{"ruleId":"112","severity":1,"message":"128","line":1,"column":85,"nodeType":"114","messageId":"115","endLine":1,"endColumn":100},{"ruleId":"119","severity":1,"message":"120","line":24,"column":45,"nodeType":"121","messageId":"122","endLine":24,"endColumn":47},{"ruleId":"112","severity":1,"message":"128","line":1,"column":85,"nodeType":"114","messageId":"115","endLine":1,"endColumn":100},{"ruleId":"119","severity":1,"message":"120","line":22,"column":47,"nodeType":"121","messageId":"122","endLine":22,"endColumn":49},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NavMenuClickHanlder' and 'NavMenuExitHandler'. Either include them or remove the dependency array.","ArrayExpression",["131"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'curUserFIO' is assigned a value but never used.","'curUsersResults' is assigned a value but never used.","'setCurUsersResults' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-pascal-case","Imported JSX component TestTemplate_A_0 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component TestTemplate_A_1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_A_2 must be in PascalCase or SCREAMING_SNAKE_CASE","'TablePagination' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [NavMenuClickHanlder, NavMenuExitHandler, curUserData]",{"range":"134","text":"135"},[2548,2561],"[NavMenuClickHanlder, NavMenuExitHandler, curUserData]"]