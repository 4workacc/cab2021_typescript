[{"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx":"1","/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts":"2","/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts":"3","/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx":"4","/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts":"5","/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx":"6","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx":"7","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx":"8","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx":"9","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx":"10","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx":"11","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx":"12","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx":"13","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx":"14","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx":"15","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx":"16","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_1.tsx":"17","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_0.tsx":"18","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx":"19","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx":"20","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx":"21","/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts":"22"},{"size":721,"mtime":1613306113245,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1613306113245,"results":"25","hashOfConfig":"24"},{"size":1207,"mtime":1613306113245,"results":"26","hashOfConfig":"24"},{"size":693,"mtime":1613306113241,"results":"27","hashOfConfig":"24"},{"size":271,"mtime":1613306113245,"results":"28","hashOfConfig":"24"},{"size":2331,"mtime":1613306113241,"results":"29","hashOfConfig":"24"},{"size":1676,"mtime":1613306113245,"results":"30","hashOfConfig":"24"},{"size":3046,"mtime":1613306113241,"results":"31","hashOfConfig":"24"},{"size":181,"mtime":1613306113241,"results":"32","hashOfConfig":"24"},{"size":2407,"mtime":1613318337345,"results":"33","hashOfConfig":"24"},{"size":174,"mtime":1613306113241,"results":"34","hashOfConfig":"24"},{"size":225,"mtime":1613306113241,"results":"35","hashOfConfig":"24"},{"size":464,"mtime":1613306113241,"results":"36","hashOfConfig":"24"},{"size":5350,"mtime":1613306113241,"results":"37","hashOfConfig":"24"},{"size":4460,"mtime":1613306113245,"results":"38","hashOfConfig":"24"},{"size":4743,"mtime":1613308224369,"results":"39","hashOfConfig":"24"},{"size":1809,"mtime":1613306113241,"results":"40","hashOfConfig":"24"},{"size":878,"mtime":1613306113241,"results":"41","hashOfConfig":"24"},{"size":3094,"mtime":1613306113241,"results":"42","hashOfConfig":"24"},{"size":2889,"mtime":1613306113241,"results":"43","hashOfConfig":"24"},{"size":3321,"mtime":1613306113241,"results":"44","hashOfConfig":"24"},{"size":135626,"mtime":1613306113245,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"jvhxci",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/radmin/Documents/dev/cab2021_typescript/src/index.tsx",[],["99","100"],"/home/radmin/Documents/dev/cab2021_typescript/src/reportWebVitals.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/reducers.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/App/App.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/store/state.ts",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/LoginPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/index.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/NavBar.tsx",["101"],"import { AppBar, Button, MenuItem, Toolbar } from '@material-ui/core';\nimport React, { Dispatch, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const NavBar:React.FC = () => {\n    const curStateUserData = useSelector((state:IRootState) => state.curUser);\n    const [curUserData, setCurUserData] = useState<IUserData>({\n        UserId : -1,\n        UserFIO : \"\"\n    });\n    \n    const [ curNavMenu, setCurNavMenu ] = useState([]);\n    \n    useEffect(()=>{\n       setCurUserData(curStateUserData);     \n    },[curStateUserData]);\n\n    const dispatch:Dispatch<any> = useDispatch();\n    const NavMenuClickHanlder = ( link:string ) => {\n        dispatch({\n            type: \"ShowSubPage\",\n            newSubPage: link\n        })\n   };\n   const NavMenuExitHandler = () => {\n       dispatch({\n           type : \"LogOut\"\n       })\n   };\n    useEffect (() => {\n       \n        let menu:any;\n        if (curUserData.UserFIO === \"Admin\" ) {\n            menu = (\n                <>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminAddTask\")\n                        }}>Дадаць заданне</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminResults\")\n                        }}>Вынікі тэстаў</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"AdminStatistics\")\n                        }}>Статыстыка</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuExitHandler();\n                        }}>Выхад</MenuItem>\n                    </>\n            );\n        }        \n        else {\n            menu = (\n                <>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"UserTasks\")\n                        }}>Заданні</MenuItem>\n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuClickHanlder(\"UserResults\")\n                        }}>Вынікі тэстаў</MenuItem>                \n                    <MenuItem\n                        onClick = { () => {\n                            NavMenuExitHandler();\n                        }}>Выхад</MenuItem>\n                    </>\n            );\n        }\n        setCurNavMenu(menu);                \n    }, [curUserData]);\n   \n   return (\n        <div className = \"NavBar\">\n            <AppBar position=\"static\" className=\"NavBar\">\n                <Toolbar className=\"NavBar_1\">\n                    <Button color=\"inherit\"> {`Прывітанне,  ${curUserData.UserFIO}`}</Button>       \n                    <div className=\"NavBar_Nav\">{curNavMenu}</div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminStatistics.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminAddTask.tsx",["102","103"],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/AdminPages/AdminResults.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasks.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResults.tsx",["104","105","106","107"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { UserResultsTab } from \"./UserResultsTab\";\n\nexport const UserResults:React.FC = () => {\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curUsersResults, setCurUsersResults ] = useState<any[]>([]);\n\n    return (\n        <div className = \"UserResults\">            \n            <UserResultsTab />\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/index.tsx",["108","109","110","111","112","113","114","115","116","117","118"],"import { Button, makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { TestBase } from '../../../store/Tests';\nimport { TestTemplate_A_0 } from './TestPageTemplates/TestPageTemplate_A_0';\nimport { TestTemplate_A_1 } from './TestPageTemplates/TestPageTemplate_A_1';\nimport { TestTemplate_A_2 } from './TestPageTemplates/TestPageTemplate_A_2';\nimport { TestTemplate_B_0 } from './TestPageTemplates/TestPageTemplate_B_0';\nimport { TestTemplate_B_1 } from './TestPageTemplates/TestPageTemplate_B_1';\n\ninterface IQuest {\n    quest: string,\n    type: string,\n    answers?: any,\n    questText?: any,\n    questTextArr?:string[],\n    id?:string,\n    right?:string,\n    theme?:string\n};\nconst shuffle = (array:any[]):void => {\n    array.sort(() => Math.random() - 0.5);\n  }\nconst useClass = makeStyles({\n    button :{\n        left: \"47%\",\n        top: \"200px\",\n        transform: \"scale(2)\"\n    }\n})\n\nexport const TestPage:React.FC = () => {\n    const dispatch:Dispatch<any> = useDispatch();\n    const classes = useClass();\n\n    const curTestName = useSelector((state:IRootState) => state.curTestName);    \n    const curTestId = useSelector((state:IRootState) => state.curTestId);\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n\n    const [ curTestsQuests, setCurTestsQuests ] = useState<any[]>([]);\n\n    const [ curQuestIndex, incrQuestIndex ] = useState(0);\n    const [ rightCount, incrRightCount ] = useState(0);\n\n    const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n\n    const [ rArr, setRArr ] = useState<string[]>([]);\n    const [ rIds, setRIds ] = useState<string[]>([]);\n    const [ rThemes, setRThemes ] = useState<string[]>([]);\n    const [ rAnswers, setRAnswers ] = useState<string[]>([]); \n\n    useEffect (() => { \n        let curTestsSet:any[]= [];\n        let rr:any[] = [];\n        let tIds:any[] = [];\n        let tTemes:any[] = [];\n        TestBase.map ( (el:any) => {\n            if ( el.testSetName === curTestName ) {\n                let qq:any = el.questions;\n                //shuffle(qq);\n                qq.map ( (al:IQuest) => {\n                        switch (al.type) {\n                            case \"A_0\" :\n                                curTestsSet.push(<TestTemplate_A_0 quest={al.quest} answers={al.answers} />); break;\n                            case \"A_1\" :\n                                curTestsSet.push(<TestTemplate_A_1 quest={al.quest} answers={al.answers} />); break;\n                            case \"A_2\" :\n                                curTestsSet.push(<TestTemplate_A_2 quest={al.quest} questText = {al.questText} answers={al.answers} />); break;\n                            case \"B_0\" :\n                                curTestsSet.push(<TestTemplate_B_0 quest={al.quest} questText = {al.questText} />); break;\n                            case \"B_1\" :\n                                curTestsSet.push(<TestTemplate_B_1 quest={al.quest} questTextArr = {al.questTextArr || []}/>); break;\n                        };\n                        rr.push(al.right);\n                        tIds.push(al.id);                        \n                        tTemes.push(al.theme);\n                })\n            };\n        });   \n        setRArr(rr);\n        setRIds(tIds);\n        setRThemes(rThemes);                 \n        setCurTestsQuests( curTestsSet );\n    },[ curTestName])\n\n\n    const clickHandler = () => {\n        if (curUserAnswer === rArr[curQuestIndex]) {\n            alert (\"Right\");\n            incrRightCount( rightCount +1 );\n        };\n        if ( curQuestIndex < curTestsQuests.length -1) {\n            let yy = rAnswers;\n            yy.push( `${rIds[curQuestIndex]}_${rThemes[curQuestIndex]}_${curUserAnswer === rArr[curQuestIndex]}_${curUserAnswer!}`);\n            setRAnswers( yy );\n            incrQuestIndex( curQuestIndex + 1);\n            dispatch({\n                type :\"SetUserAnswer\",\n                curUserAnswer : \"\"\n            });                   \n        }\n        else {\n            let rez:number = Math.floor(rightCount/curTestsQuests.length*100);\n            let anss = rAnswers.join(\"@\");\n            alert(`Right count: ${rightCount} of ${curTestsQuests.length} ( ${ rez })`)\n            dispatch({\n                type : \"ShowSubPage\",\n                newSubPage: \"UserTasks\"\n            });\n            let dt = Date.now();\n            let ct = (\"\"+new Date(dt)).split(\"G\")[0];\n            fetch(`https://cab07.000webhostapp.com/new_refact/new_user_updateTasksAttemptsCount.php?\n                TASK_ID=${curTestId}&\n                REQ_NAME=${curTestName}&\n                REQ_FIO=${curUserFIO}&\n                REQ_DATE=${ct}&\n                REQ_RES=${rez}&\n                REQ_ANS=${anss}`);\n        }\n        \n    };\n    https://cab07.000webhostapp.com/new_refact/new_user_updateTasksAttemptsCount.php?TASK_ID=1&\n    return (\n        <div className = \"TestPage\">                \n            { curTestsQuests[curQuestIndex]}\n            <Button \n                variant=\"contained\" \n                color=\"primary\"\n                className = {classes.button}\n                onClick = { clickHandler }\n                >Адказаць</Button>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserTasks/UserTasksTable.tsx",["119","120","121","122"],"import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nconst useStyles = makeStyles({\n    tablecell : {\n        fontSize: \"25px\",\n    },\n  });\n\nexport const UserResultsTab: React.FC = () => {\n    const classes = useStyles();\n    const dispatch:Dispatch<any> = useDispatch();\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curShowTasks, setCurShowTasks ] = useState<any[]>([]);\n\n    const getTabData = ( ) => {\n        fetch(`https://cab07.000webhostapp.com/new_refact/new_user_getTasks.php?request_user_fio=${curUserFIO}`)\n        .then( (res)=>res.json())\n        .then (\n            (result) => {           \n                let arr:any[] = [];     \n                result.tasks.map ( (el:any) => {\n                    arr.push(                     \n                        {\n                            test_id : el.task_id,\n                            test_name: el.task_test_name,\n                            dateTime: el.task_end_time,\n                            attepts_count: el.task_attempts_count\n                        }\n                    )\n                })  \n                setCurShowTasks(arr);                  \n            }\n        );      \n    }\n    useEffect (()=>{\n        getTabData();\n    },[])\n    useEffect(()=>{        \n        getTabData();   \n    },[curUserFIO]);\n    const userTaksTrClickHandler = (nam: string, id:number ) => {\n        dispatch ({\n            type : \"ShowTest\",\n            testName : nam,\n            testId: id\n        })\n    }\n    return (\n        <div className=\"UserTasksTab\">           \n            <Paper>\n                <TableContainer>\n                    <Table stickyHeader aria-label=\"sticky table\" className=\"UserTasksTab\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell\n                                    key={\"01\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"250px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Назва тэста\n                                </TableCell>\n                                <TableCell\n                                    key={\"02\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"200px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Дата выканання\n                                </TableCell>\n                                <TableCell\n                                    key={\"03\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"100px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Колькасць спроб\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>     \n                            { curShowTasks.map ( el => {\n                                return (\n                                    <TableRow \n                                        hover\n                                        key = {el.test_id} \n                                        onClick = { () => { userTaksTrClickHandler(el.test_name, el.test_id)}}>\n                                        <TableCell align=\"center\" key={el.test_id+\"01\"} className={classes.tablecell}>{el.test_name}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.dateTime}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.attepts_count}</TableCell>\n                                    </TableRow>  \n                                )\n                            } )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/UserPages/UserResults/UserResultsTab.tsx",["123","124"],"import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    tablecell : {\n        fontSize: \"25px\",\n    },\n  });\n\nexport const UserResultsTab: React.FC = () => {\n    const classes = useStyles();\n    const curUserFIO = useSelector((state:IRootState) => state.curUser.UserFIO);\n    const [ curShowTasks, setCurShowTasks ] = useState<any[]>([]);\n\n    useEffect(()=>{        \n        fetch(`https://cab07.000webhostapp.com/new_refact/new_user_getTestsResults.php?request_user_fio=${curUserFIO}`)\n        .then( (res)=>res.json())\n        .then (\n            (result) => {           \n                let arr:any[] = [];   \n\n                result.results.map ( (el:any) => {\n                    arr.push(                     \n                        {   \n                            task_id: el.task_id,\n                            test_id : el.test_id,\n                            test_name: el.test_name,\n                            dateTime: el.dateTime,\n                            result: el.result\n                        }\n                    )\n                })  \n                setCurShowTasks(arr.reverse());                  \n            }\n        );               \n    },[curUserFIO]);\n    return (\n        <div className=\"UserResultsTab\">           \n            <Paper>\n                <TableContainer>\n                    <Table stickyHeader aria-label=\"sticky table\" className=\"UserResultsTab\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell\n                                    key={\"01\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"250px\" }}\n                                    className={classes.tablecell}\n                                >\n                                   Назва тэста\n                                </TableCell>\n                                <TableCell\n                                    key={\"02\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"200px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Дата выканання\n                                </TableCell>\n                                <TableCell\n                                    key={\"03\"}\n                                    align=\"center\"\n                                    style={{ minWidth: \"100px\" }}\n                                    className={classes.tablecell}\n                                >\n                                    Вынік\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>     \n                            {/* select results by task id to arr\n                            show \n                            <tableRow>\n                                <test name><medium value>\n                            <table row>\n                                <attempt date><attempt result>\n                                <attempt date><attempt result>\n                                <attempt date><attempt result>\n                                \n                            */}\n                            { curShowTasks.map ( el => {\n                                return (\n                                    <>\n                                    <TableRow>\n                                        <TableCell align = \"center\">midvalue</TableCell>\n                                    </TableRow>\n                                    <TableRow \n                                        hover\n                                        key = {el.test_id} >\n                                        <TableCell align=\"center\" key={el.test_id+\"01\"} className={classes.tablecell}>{el.test_name}_{el.task_id}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.dateTime}</TableCell>\n                                        <TableCell align=\"center\" key={el.test_id+\"02\"} className={classes.tablecell}>{el.result}</TableCell>\n                                    </TableRow>\n                                    </>  \n                                )\n                            } )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    )\n}","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_1.tsx",["125","126","127","128","129"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\ninterface ITT_B_1_props {\n  quest: string;\n  questTextArr: string[];\n}\n\nconst useStyles = makeStyles({ \n  container :{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n  },\n  lil : {\n    fontSize: 30,\n    listStyleType: \"none\"\n  },\n  inner_container:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  quest: {\n    fontSize: 30,\n    textAlign: \"center\"\n  }\n});\n\nexport const TestTemplate_B_1 = ({quest, questTextArr}:ITT_B_1_props) => {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.container}>\n      <p className = {classes.quest}>{quest}</p>\n      <div className={classes.inner_container}>\n        <div>\n          <ul style={{}}>   \n            <li className = {classes.lil}>{questTextArr[0]}</li>\n            <li className = {classes.lil}>{questTextArr[1]}</li>\n            <li className = {classes.lil}>{questTextArr[2]}</li>\n            <li className = {classes.lil}>{questTextArr[3]}</li>\n            <li className = {classes.lil}>{questTextArr[4]}</li>\n          </ul>\n        </div>\n        <div>\n          <ul>\n            <li className = {classes.lil}>{questTextArr[5]}</li>\n            <li className = {classes.lil}>{questTextArr[6]}</li>\n            <li className = {classes.lil}>{questTextArr[7]}</li>\n            <li className = {classes.lil}>{questTextArr[8]}</li>\n            <li className = {classes.lil}>{questTextArr[9]}</li>\n          </ul>\n        </div>\n      </div>\n      <TextField id=\"outlined-basic\" label=\"Адказ\" variant=\"outlined\" />\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_B_0.tsx",["130","131","132","133","134"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\ninterface ITT_B_0_props {\n  quest: string;\n  questText: string;\n}\n\nconst useStyles = makeStyles({ \n  container :{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    height: \"500px\"\n  },\n  questText :{\n    fontSize: 30\n  },\n  quest: {\n    fontSize: 30\n  }\n});\n\nexport const TestTemplate_B_0 = ({quest, questText}:ITT_B_0_props) => {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.container}>\n      <p className = {classes.quest}>{quest}</p>\n      <p className = {classes.questText}>{questText}</p>\n      <TextField id=\"outlined-basic\" label=\"Адказ\" variant=\"outlined\" />\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_2.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_1.tsx",[],"/home/radmin/Documents/dev/cab2021_typescript/src/components/MainPage/TestPage/TestPageTemplates/TestPageTemplate_A_0.tsx",["135"],"import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\ninterface ITT_A_0_props {\n  quest: string;\n  answers: string[];\n}\n\nconst useStyles = makeStyles({\n  quest : {\n      fontSize: 60,\n      width: \"100%\",    \n      textAlign: \"center\"  \n  },\n  lab: {\n    fontSize: 40,\n    marginLeft: 30,\n  },\n  checkbox: {\n    paddingTop: 10,  \n    transform: \"scale(2)\",\n  },\n});\n\nexport const TestTemplate_A_0 = ({quest, answers}:ITT_A_0_props) => {\n  const dispatch:Dispatch<any> = useDispatch();\n  const curUserAnswer = useSelector((state:IRootState) => state.curUserAnswer);\n  const classes = useStyles();\n  const [ ch0, setCh0 ] = useState(false);\n  const [ ch1, setCh1 ] = useState(false);\n  const [ ch2, setCh2 ] = useState(false);\n  const [ ch3, setCh3 ] = useState(false);\n  const [ ch4, setCh4 ] = useState(false);\n\n  useEffect (() => {\n    if (curUserAnswer === \"\") {\n      setCh0(false);\n      setCh1(false);\n      setCh2(false);\n      setCh3(false);\n      setCh4(false);\n    }    \n  },[ curUserAnswer])\n\n  useEffect(()=>{\n    dispatch({\n        type: \"SetUserAnswer\",\n        curUserAnswer : `${ch0?\"1\":\"\"}${ch1?\"2\":\"\"}${ch2?\"3\":\"\"}${ch3?\"4\":\"\"}${ch4?\"5\":\"\"}`\n    });\n  },[ch0, ch1, ch2, ch3, ch4])\n  \n  return (\n    <div className=\"TT_A_0\">\n      <p className = {classes.quest}>{quest}</p>\n      <FormGroup>\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox\n              checked={ch0}\n              className={classes.checkbox}\n              onChange={ () => setCh0(!ch0) }\n              name=\"gilad\"\n            />\n          }\n          label={<Typography className={classes.lab}>{answers[0]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch1} \n                className={classes.checkbox}\n                onChange={ () => setCh1(!ch1) }\n                name=\"jason\" />}\n          label={<Typography className={classes.lab}>{answers[1]}</Typography>}\n        />\n        <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch2} \n                className={classes.checkbox}\n                onChange={ () => setCh2(!ch2) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[2]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch3} \n                className={classes.checkbox}\n                onChange={ () => setCh3(!ch3) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[3]}</Typography>}\n        />\n         <FormControlLabel\n          className={classes.lab}\n          control={\n            <Checkbox \n                checked={ch4} \n                className={classes.checkbox}\n                onChange={ () => setCh4(!ch4) }\n                name=\"antoine\" />}\n          label={<Typography className={classes.lab}>{answers[4]}</Typography>}\n        />\n      </FormGroup>\n    </div>\n  );\n};\n","/home/radmin/Documents/dev/cab2021_typescript/src/store/Tests.ts",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":74,"column":8,"nodeType":"142","endLine":74,"endColumn":21,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":53,"nodeType":"146","messageId":"147","endLine":1,"endColumn":69},{"ruleId":"144","severity":1,"message":"148","line":16,"column":11,"nodeType":"146","messageId":"147","endLine":16,"endColumn":21},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"150","line":6,"column":11,"nodeType":"146","messageId":"147","endLine":6,"endColumn":21},{"ruleId":"144","severity":1,"message":"151","line":7,"column":13,"nodeType":"146","messageId":"147","endLine":7,"endColumn":28},{"ruleId":"144","severity":1,"message":"152","line":7,"column":30,"nodeType":"146","messageId":"147","endLine":7,"endColumn":48},{"ruleId":"144","severity":1,"message":"153","line":22,"column":7,"nodeType":"146","messageId":"147","endLine":22,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":58,"column":33,"nodeType":"156","messageId":"157","endLine":58,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":62,"column":38,"nodeType":"156","messageId":"157","endLine":62,"endColumn":40},{"ruleId":"158","severity":1,"message":"159","line":65,"column":50,"nodeType":"160","endLine":65,"endColumn":108},{"ruleId":"158","severity":1,"message":"161","line":67,"column":50,"nodeType":"160","endLine":67,"endColumn":108},{"ruleId":"158","severity":1,"message":"162","line":69,"column":50,"nodeType":"160","endLine":69,"endColumn":135},{"ruleId":"158","severity":1,"message":"163","line":71,"column":50,"nodeType":"160","endLine":71,"endColumn":114},{"ruleId":"158","severity":1,"message":"164","line":73,"column":50,"nodeType":"160","endLine":73,"endColumn":125},{"ruleId":"140","severity":1,"message":"165","line":85,"column":7,"nodeType":"142","endLine":85,"endColumn":21,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":123,"column":5,"nodeType":"169","messageId":"170","endLine":134,"endColumn":6},{"ruleId":"171","severity":1,"message":"172","line":123,"column":5,"nodeType":"146","messageId":"173","endLine":123,"endColumn":10},{"ruleId":"144","severity":1,"message":"174","line":1,"column":85,"nodeType":"146","messageId":"147","endLine":1,"endColumn":100},{"ruleId":"154","severity":1,"message":"155","line":24,"column":45,"nodeType":"156","messageId":"157","endLine":24,"endColumn":47},{"ruleId":"140","severity":1,"message":"175","line":40,"column":7,"nodeType":"142","endLine":40,"endColumn":9,"suggestions":"176"},{"ruleId":"140","severity":1,"message":"175","line":43,"column":7,"nodeType":"142","endLine":43,"endColumn":19,"suggestions":"177"},{"ruleId":"144","severity":1,"message":"174","line":1,"column":85,"nodeType":"146","messageId":"147","endLine":1,"endColumn":100},{"ruleId":"154","severity":1,"message":"155","line":23,"column":47,"nodeType":"156","messageId":"157","endLine":23,"endColumn":49},{"ruleId":"144","severity":1,"message":"178","line":2,"column":3,"nodeType":"146","messageId":"147","endLine":2,"endColumn":11},{"ruleId":"144","severity":1,"message":"179","line":3,"column":3,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"180","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"181","line":7,"column":3,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"182","line":9,"column":17,"nodeType":"146","messageId":"147","endLine":9,"endColumn":25},{"ruleId":"144","severity":1,"message":"178","line":2,"column":3,"nodeType":"146","messageId":"147","endLine":2,"endColumn":11},{"ruleId":"144","severity":1,"message":"179","line":3,"column":3,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"180","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"181","line":7,"column":3,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"182","line":9,"column":17,"nodeType":"146","messageId":"147","endLine":9,"endColumn":25},{"ruleId":"140","severity":1,"message":"183","line":58,"column":5,"nodeType":"142","endLine":58,"endColumn":30,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NavMenuClickHanlder' and 'NavMenuExitHandler'. Either include them or remove the dependency array.","ArrayExpression",["187"],"@typescript-eslint/no-unused-vars","'MuiThemeProvider' is defined but never used.","Identifier","unusedVar","'handleTest' is assigned a value but never used.","'useEffect' is defined but never used.","'curUserFIO' is assigned a value but never used.","'curUsersResults' is assigned a value but never used.","'setCurUsersResults' is assigned a value but never used.","'shuffle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-pascal-case","Imported JSX component TestTemplate_A_0 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component TestTemplate_A_1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_A_2 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_B_0 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TestTemplate_B_1 must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'rThemes'. Either include it or remove the dependency array. You can also do a functional update 'setRThemes(r => ...)' if you only need 'rThemes' in the 'setRThemes' call.",["188"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused","'TablePagination' is defined but never used.","React Hook useEffect has a missing dependency: 'getTabData'. Either include it or remove the dependency array.",["189"],["190"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [NavMenuClickHanlder, NavMenuExitHandler, curUserData]",{"range":"202","text":"203"},"Update the dependencies array to be: [curTestName, rThemes]",{"range":"204","text":"205"},"Update the dependencies array to be: [getTabData]",{"range":"206","text":"207"},"Update the dependencies array to be: [curUserFIO, getTabData]",{"range":"208","text":"209"},"Update the dependencies array to be: [ch0, ch1, ch2, ch3, ch4, dispatch]",{"range":"210","text":"211"},[2561,2574],"[NavMenuClickHanlder, NavMenuExitHandler, curUserData]",[3496,3510],"[curTestName, rThemes]",[1490,1492],"[getTabData]",[1553,1565],"[curUserFIO, getTabData]",[1370,1395],"[ch0, ch1, ch2, ch3, ch4, dispatch]"]